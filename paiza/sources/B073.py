"""
あなたは、並木道の木に電飾を施す仕事をしています。しかし、予算に限りがあるため使える電球の数に限りがあります。
全ての木に均等に電球を割り振るのは面白くないと考えたあなたは、木によって備え付ける電球の数を変えました。電球の数が少なく歩行が危険な区間があると困るので、ある木から別の木までの間に電球がいくつ備え付けられているか調査することにしました。
調査の結果、区間の木の電球の平均個数が、安全基準 M を満たしていない場合は、平均個数が安全基準を満たすように、その区間の木に均等に電球を追加します。ただし、追加する電球は安全の基準を満たすために必要最小限の個数に止めるようにします。また、安全の基準はその区間に備え付けられている電球の数の平均がいくつ以上という形で与えられます。
並木道の木の数、それぞれの木に備え付けられている電球の数および Q 個の電球の数を調べたい区間が与えられるので、全ての区間を調査して必要な電球を備え付けた後の並木道の状態を出力するプログラムを作成してください。ただし、調査および電球の追加は与えられた区間の順番に行うものとします。

入力は以下のフォーマットで与えられます。

N M
A_1 A_2 ... A_N
Q
S_1 E_1
S_2 E_2
...
S_Q E_Q
・1 行目には、並木道に並ぶ木の本数を表す整数 N および区間の電球の平均個数が上回らなければならない数を表す整数 M が与えられます。
・2 行目には、それぞれの木にいくつ電球が装飾されているかを表す整数 A_i (1 ≦ i ≦ N) が半角スペース区切りで与えられます。
・3 行目には、電球の数を調べたい区間の数を表す整数 Q が与えられます。
・続く Q 行には、電球の数を調べたい区間の始点を表す整数 S_i、終点を表す整数 E_i (1 ≦ i ≦ Q) が半角スペース区切りで与えられます。
・入力は全部で 3 + Q 行からなり、末尾に改行が 1 つ入ります。

期待する出力
全ての区間の調査及び電球の追加が終了した時点の木に備え付けられている電球の数を半角スペース区切りで出力してください。

末尾に改行を入れ、余計な文字、空行を含んではいけません。
"""

import math
import numpy

import utils

# 1行目を取得してmに代入
input_line_first = input().split()
m = int(input_line_first[1])

# 2行目を取得して、aというリストに代入
a_str = input().split()
a = [int(i) for i in a_str]

# 3行目以降を取得してsという2次元リストに代入
s_str = utils.get_lines_by_first_line()
s = utils.cast_int_for_two_dimensional_list(s_str)

for s_line in s:

    start = s_line[0]-1
    end = s_line[1]

    target_slice = a[start:end]
    average = numpy.average(target_slice)

    diff = 0
    if average < m:
        diff = math.ceil(m - average)

        for i, v in enumerate(a):
            if i in range(start, end):
                a[i] += diff

utils.print_list(a)
